# https://docs.github.com/en/actions

name: "Integrate"

on: # yamllint disable-line rule:truthy
  pull_request: null
  push:
    branches:
      - "main"

jobs:
  coding-standards:
    name: "Coding Standards"

    runs-on: "ubuntu-latest"

    timeout-minutes: 5

    strategy:
      matrix:
        php-version:
          - "8.0"

        dependencies:
          - "locked"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4.0.0"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@2.25.5"
        with:
          coverage: "none"
          extensions: "none, ctype, curl, dom, json, mbstring, phar, simplexml, tokenizer, xml, xmlwriter"
          php-version: "${{ matrix.php-version }}"

      - name: "Set up problem matchers for PHP"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/php.json\""

      - name: "Validate composer.json and composer.lock"
        run: "composer validate --ansi --strict"

      - name: "Determine composer cache directory"
        uses: "ergebnis/.github/actions/composer/determine-cache-directory@1.8.0"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v4.2.2"
        with:
          path: "${{ env.COMPOSER_CACHE_DIR }}"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: "Install ${{ matrix.dependencies }} dependencies with composer"
        uses: "ergebnis/.github/actions/composer/install@1.8.0"
        with:
          dependencies: "${{ matrix.dependencies }}"

      - name: "Run laravel/pint"
        run: "vendor/bin/pint --ansi --test -v"


  static-code-analyzer:
    name: "Static Code Analyzer"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.0"

        dependencies:
          - "locked"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4.0.0"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@2.25.5"
        with:
          coverage: "none"
          extensions: "none, ctype, dom, json, mbstring, opcache, simplexml, tokenizer, xml, xmlwriter"
          php-version: "${{ matrix.php-version }}"

      - name: "Set up problem matchers for PHP"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/php.json\""

      - name: "Validate composer.json and composer.lock"
        run: "composer validate --ansi --strict"

      - name: "Determine composer cache directory"
        uses: "ergebnis/.github/actions/composer/determine-cache-directory@1.8.0"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v4.2.2"
        with:
          path: "${{ env.COMPOSER_CACHE_DIR }}"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: "Install ${{ matrix.dependencies }} dependencies with composer"
        uses: "ergebnis/.github/actions/composer/install@1.8.0"
        with:
          dependencies: "${{ matrix.dependencies }}"

      - name: Run Psalm
        run: vendor/bin/psalm --output-format=github


  tests:
    name: "Tests"

    runs-on: "ubuntu-latest"

    timeout-minutes: 5

    strategy:
      matrix:
        php-version:
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"

        dependencies:
          - "locked"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4.0.0"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@2.25.5"
        with:
          coverage: "none"
          extensions: "none, ctype, curl, dom, json, mbstring, phar, simplexml, tokenizer, xml, xmlwriter"
          php-version: "${{ matrix.php-version }}"

      - name: "Set up problem matchers for PHP"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/php.json\""

      - name: "Validate composer.json and composer.lock"
        run: "composer validate --ansi --strict"

      - name: "Determine composer cache directory"
        uses: "ergebnis/.github/actions/composer/determine-cache-directory@1.8.0"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v4.2.2"
        with:
          path: "${{ env.COMPOSER_CACHE_DIR }}"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: "Install ${{ matrix.dependencies }} dependencies with composer"
        uses: "ergebnis/.github/actions/composer/install@1.8.0"
        with:
          dependencies: "${{ matrix.dependencies }}"

      - name: "Run tests with phpunit/phpunit"
        run: "vendor/bin/phpunit --colors=always --configuration=phpunit.xml"
